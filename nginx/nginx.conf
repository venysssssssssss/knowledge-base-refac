events { }

http {
    server {
        listen 0.0.0.0:8080;

        # ---------------------------
        # Frontend (Next.js dev server)
        # ---------------------------
        location / {
            proxy_pass http://localhost:3000;
            proxy_http_version 1.1;

            # WebSocket e SSE
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';

            # Host original
            proxy_set_header Host $host;

            # Cache
            proxy_cache_bypass $http_upgrade;

            # Headers CORS
            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header Access-Control-Allow-Headers 'Origin, Content-Type, Accept, Authorization' always;

            # Resposta para preflight
            if ($request_method = OPTIONS) {
                return 204;
            }
        }

        # ---------------------------
        # Document Processor
        # ---------------------------
        location /api/document-processor/ {
            proxy_pass http://10.117.0.19:8001/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;

            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header Access-Control-Allow-Headers 'Origin, Content-Type, Accept, Authorization' always;

            if ($request_method = OPTIONS) {
                return 204;
            }
        }

        # ---------------------------
        # RAG Service
        # ---------------------------
        location /api/rag-service/ {
            proxy_pass http://10.117.0.19:8002/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;

            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header Access-Control-Allow-Headers 'Origin, Content-Type, Accept, Authorization' always;

            if ($request_method = OPTIONS) {
                return 204;
            }
        }

        # ---------------------------
        # Mistral Service
        # ---------------------------
        location /api/mistral-service/ {
            proxy_pass http://10.117.0.19:8003/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;

            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header Access-Control-Allow-Headers 'Origin, Content-Type, Accept, Authorization' always;

            if ($request_method = OPTIONS) {
                return 204;
            }
        }

        # ---------------------------
        # Vector Store
        # ---------------------------
        location /api/vector-store/ {
            proxy_pass http://10.117.0.19:6333/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;

            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header Access-Control-Allow-Headers 'Origin, Content-Type, Accept, Authorization' always;

            if ($request_method = OPTIONS) {
                return 204;
            }
        }
    }
}
